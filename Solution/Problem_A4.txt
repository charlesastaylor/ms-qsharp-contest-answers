Had two methods for solving this problem.

One is generalisation of https://physics.stackexchange.com/questions/311743/quantum-circuit-for-a-3-qubit-w-state to N qubits
    N = 2: http://algassert.com/quirk#circuit={%22cols%22:[[1,%22H%22],[%22X%22,%22%E2%97%A6%22]],%22gates%22:[{%22id%22:%22~1b3%22,%22name%22:%22G(1/3)%22,%22matrix%22:%22{{%E2%88%9A%E2%85%94,-%E2%88%9A%E2%85%93},{%E2%88%9A%E2%85%93,%E2%88%9A%E2%85%94}}%22},{%22id%22:%22~joqi%22,%22name%22:%22G(1/2)%22,%22circuit%22:{%22cols%22:[[%22H%22],[%22Z%22]]}},{%22id%22:%22~bb6l%22,%22name%22:%22G(1)%22,%22circuit%22:{%22cols%22:[[%22X%22],[%22Z%22]]}},{%22id%22:%22~28t0%22,%22name%22:%22G(1/4%22,%22matrix%22:%22{{0.6546537,-0.7559289},{0.7559289,0.6546537}}%22},{%22id%22:%22~7709%22,%22name%22:%22G(1/4)%22,%22matrix%22:%22{{%E2%88%9A%C2%BE,-%C2%BD},{%C2%BD,%E2%88%9A%C2%BE}}%22},{%22id%22:%22~2gl%22,%22name%22:%22G(1/5)%22,%22matrix%22:%22{{%E2%88%9A%E2%85%98,-%E2%88%9A%E2%85%95},{%E2%88%9A%E2%85%95,%E2%88%9A%E2%85%98}}%22},{%22id%22:%22~sv98%22,%22name%22:%22G(1/6)%22,%22matrix%22:%22{{%E2%88%9A%E2%85%9A,-%E2%88%9A%E2%85%99},{%E2%88%9A%E2%85%99,%E2%88%9A%E2%85%9A}}%22},{%22id%22:%22~ljs1%22,%22name%22:%22G(1/8)%22,%22matrix%22:%22{{%E2%88%9A%E2%85%9E,-%E2%88%9A%E2%85%9B},{%E2%88%9A%E2%85%9B,%E2%88%9A%E2%85%9E}}%22},{%22id%22:%22~2qot%22,%22name%22:%22G(1/7)%22,%22matrix%22:%22{{0.9258201,-%E2%88%9A%E2%85%90},{%E2%88%9A%E2%85%90,0.9258201}}%22}]}
    N = 4: http://algassert.com/quirk#circuit={%22cols%22:[[1,1,1,%22~7709%22],[1,1,%22~1b3%22,%22%E2%97%A6%22],[1,%22H%22,%22%E2%97%A6%22,%22%E2%97%A6%22],[%22X%22,%22%E2%97%A6%22,%22%E2%97%A6%22,%22%E2%97%A6%22]],%22gates%22:[{%22id%22:%22~1b3%22,%22name%22:%22G(1/3)%22,%22matrix%22:%22{{%E2%88%9A%E2%85%94,-%E2%88%9A%E2%85%93},{%E2%88%9A%E2%85%93,%E2%88%9A%E2%85%94}}%22},{%22id%22:%22~joqi%22,%22name%22:%22G(1/2)%22,%22circuit%22:{%22cols%22:[[%22H%22],[%22Z%22]]}},{%22id%22:%22~bb6l%22,%22name%22:%22G(1)%22,%22circuit%22:{%22cols%22:[[%22X%22],[%22Z%22]]}},{%22id%22:%22~28t0%22,%22name%22:%22G(1/4%22,%22matrix%22:%22{{0.6546537,-0.7559289},{0.7559289,0.6546537}}%22},{%22id%22:%22~7709%22,%22name%22:%22G(1/4)%22,%22matrix%22:%22{{%E2%88%9A%C2%BE,-%C2%BD},{%C2%BD,%E2%88%9A%C2%BE}}%22},{%22id%22:%22~2gl%22,%22name%22:%22G(1/5)%22,%22matrix%22:%22{{%E2%88%9A%E2%85%98,-%E2%88%9A%E2%85%95},{%E2%88%9A%E2%85%95,%E2%88%9A%E2%85%98}}%22},{%22id%22:%22~sv98%22,%22name%22:%22G(1/6)%22,%22matrix%22:%22{{%E2%88%9A%E2%85%9A,-%E2%88%9A%E2%85%99},{%E2%88%9A%E2%85%99,%E2%88%9A%E2%85%9A}}%22},{%22id%22:%22~ljs1%22,%22name%22:%22G(1/8)%22,%22matrix%22:%22{{%E2%88%9A%E2%85%9E,-%E2%88%9A%E2%85%9B},{%E2%88%9A%E2%85%9B,%E2%88%9A%E2%85%9E}}%22},{%22id%22:%22~2qot%22,%22name%22:%22G(1/7)%22,%22matrix%22:%22{{0.9258201,-%E2%88%9A%E2%85%90},{%E2%88%9A%E2%85%90,0.9258201}}%22}]}
    N = 8: http://algassert.com/quirk#circuit={%22cols%22:[[1,1,1,1,1,1,1,%22~ljs1%22],[1,1,1,1,1,1,%22~2qot%22,%22%E2%97%A6%22],[1,1,1,1,1,%22~sv98%22,%22%E2%97%A6%22,%22%E2%97%A6%22],[1,1,1,1,%22~2gl%22,%22%E2%97%A6%22,%22%E2%97%A6%22,%22%E2%97%A6%22],[1,1,1,%22~7709%22,%22%E2%97%A6%22,%22%E2%97%A6%22,%22%E2%97%A6%22,%22%E2%97%A6%22],[1,1,%22~1b3%22,%22%E2%97%A6%22,%22%E2%97%A6%22,%22%E2%97%A6%22,%22%E2%97%A6%22,%22%E2%97%A6%22],[1,%22H%22,%22%E2%97%A6%22,%22%E2%97%A6%22,%22%E2%97%A6%22,%22%E2%97%A6%22,%22%E2%97%A6%22,%22%E2%97%A6%22],[%22X%22,%22%E2%97%A6%22,%22%E2%97%A6%22,%22%E2%97%A6%22,%22%E2%97%A6%22,%22%E2%97%A6%22,%22%E2%97%A6%22,%22%E2%97%A6%22]],%22gates%22:[{%22id%22:%22~1b3%22,%22name%22:%22G(1/3)%22,%22matrix%22:%22{{%E2%88%9A%E2%85%94,-%E2%88%9A%E2%85%93},{%E2%88%9A%E2%85%93,%E2%88%9A%E2%85%94}}%22},{%22id%22:%22~joqi%22,%22name%22:%22G(1/2)%22,%22circuit%22:{%22cols%22:[[%22H%22],[%22Z%22]]}},{%22id%22:%22~bb6l%22,%22name%22:%22G(1)%22,%22circuit%22:{%22cols%22:[[%22X%22],[%22Z%22]]}},{%22id%22:%22~28t0%22,%22name%22:%22G(1/4%22,%22matrix%22:%22{{0.6546537,-0.7559289},{0.7559289,0.6546537}}%22},{%22id%22:%22~7709%22,%22name%22:%22G(1/4)%22,%22matrix%22:%22{{%E2%88%9A%C2%BE,-%C2%BD},{%C2%BD,%E2%88%9A%C2%BE}}%22},{%22id%22:%22~2gl%22,%22name%22:%22G(1/5)%22,%22matrix%22:%22{{%E2%88%9A%E2%85%98,-%E2%88%9A%E2%85%95},{%E2%88%9A%E2%85%95,%E2%88%9A%E2%85%98}}%22},{%22id%22:%22~sv98%22,%22name%22:%22G(1/6)%22,%22matrix%22:%22{{%E2%88%9A%E2%85%9A,-%E2%88%9A%E2%85%99},{%E2%88%9A%E2%85%99,%E2%88%9A%E2%85%9A}}%22},{%22id%22:%22~ljs1%22,%22name%22:%22G(1/8)%22,%22matrix%22:%22{{%E2%88%9A%E2%85%9E,-%E2%88%9A%E2%85%9B},{%E2%88%9A%E2%85%9B,%E2%88%9A%E2%85%9E}}%22},{%22id%22:%22~2qot%22,%22name%22:%22G(1/7)%22,%22matrix%22:%22{{0.9258201,-%E2%88%9A%E2%85%90},{%E2%88%9A%E2%85%90,0.9258201}}%22}]}

Second method only uses H, X and controls. Pretty sure this is the intended solution.
Doesn't use G (Rotations around y)
    N = 4: http://algassert.com/quirk#circuit={%22cols%22:[[1,1,%22H%22,%22H%22],[%22Chance4%22],[1,%22X%22,%22%E2%97%A6%22,%22%E2%97%A6%22],[%22Chance4%22],[%22X%22,1,%22%E2%80%A2%22,%22%E2%80%A2%22],[%22%E2%80%A2%22,1,%22X%22,%22X%22],[%22Chance4%22]]}
    N = 8: http://algassert.com/quirk#circuit={%22cols}

Ended up implementing Method 1 for my solution because seemed easier.
Method 2 would actually be quite easy using some library methods:
eg: BoolArrFromPositiveInt, ControlledOnBitString